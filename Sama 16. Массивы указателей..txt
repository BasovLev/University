#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void print(char **words, int num_w) {
    for (int i = 0; i < num_w; i++) {
        printf("%s\n", words[i]);
    }
}

void sort(char **words, int num_w) {
    char *tmp;
    for (int i = 0; i < num_w; i++) {
        for (int j = 0; j < num_w - 1 - i; j++) {
            if (strcmp((words[j]), (words[j + 1])) > 0) {
                tmp = words[j];
                words[j] = words[j + 1];
                words[j + 1] = tmp;
            }
        }
    }
}

int read(char *text, char **words) {
    FILE *fp;
    fp = fopen("file.txt", "r");
    int counter = 0;
    int num_w = 0;

    char c;
    c = fgetc(fp);
    words[num_w++] = &(text[counter]);
    while (c != EOF) {
        text[counter++] = c;
        if (c == '\n') {
            words[num_w++] = &(text[counter]);
        }
        c = fgetc(fp);
    }
    return num_w;
}

int part(int *mas, int point1, int point2, int len){
    int s1 = 0, s2 = 0, s3 = 0;
    for (int i = 0; i < point1; i++){
        s1 += mas[i];
    }
    for (int i = point1; i < point2; i++){
        s2 += mas[i];
    }
    for (int i = point2; i < len; i++){
        s3 += mas[i];
    }
    return abs(s2 - s1) + abs(s3 - s2);
}

void save(char **words, int num_w) {
    FILE *fp;
    fp = fopen("file.txt", "w");
    for (int i = 0; i < num_w; i++) {
        fputs(words[i], fp);
        fputc('\n', fp);
    }
    fclose(fp);
}



int main() {
    char text[2000], *words[200], c, s[20], alpha[26] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
                         'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
    int count = 0, num_w = 0, cs;
    memset(text, 0, 2000);
    memset(words, 0, 200);
    c = getchar();
    while (c != '\n') {
        gets(s);
        words[num_w++] = &(text[count]);
        text[count++] = c;
        cs = 0;
        while (s[cs] != 0) {
            text[count++] = s[cs++];
        }
        text[count++] = '\0';
        c = getchar();
    }

    sort(words, num_w);
    print(words, num_w);
    printf("\n");
    int freq[26];
    for (int i = 0; i < 26; i++) {
        freq[i] = 0;
    }
    int j;
    for (int i = 0; i < num_w; i++) {
        for (j = 0; j < 26; j++) {
            if (alpha[j] == words[i][0]) {
                break;
            }
        }
        freq[j]++;
    }

    int point1 = 0, point2 = 0;
    int maxr = num_w;
    int tmps;
    for (int i = 25; i >= 1; i--){
        for (int k = 25; k >= i; k--){
            tmps = part(freq, i, k, 26);
            if (tmps < maxr){
                maxr = tmps;
                point1 = i;
                point2 = k;
            }
        }
    }

    int s1 = 0, s2 = 0, s3 = 0;
    for (int i = 0; i < point1; i++){
        s1 += freq[i];
    }
    for (int i = point1; i < point2; i++){
        s2 += freq[i];
    }
    for (int i = point2; i < 26; i++){
        s3 += freq[i];
    }
    printf("A-%c %d\n", alpha[point1 - 1], s1);
    printf("%c-%c %d\n", alpha[point1], alpha[point2 - 1], s2);
    printf("%c-Z %d\n", alpha[point2], s3);
    return 0;
}
